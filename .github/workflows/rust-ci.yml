name: Rust CI & Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:password@localhost:5432/newsletter
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Wait for Postgres
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -U postgres && break
            sleep 2
          done

      - name: Setup database
        run: |
          sqlx database create || echo "database already exists"
          sqlx migrate run

      - name: Run tests
        run: cargo test --verbose

      - name: Build release
        run: cargo build --release

      - name: Package Linux binary
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir -p dist
          cp target/release/zero2prod dist/
          tar -czf zero2prod-${{ github.ref_name }}-linux-x86_64.tar.gz -C dist zero2prod

      - name: Upload Linux release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: zero2prod-${{ github.ref_name }}-linux-x86_64.tar.gz